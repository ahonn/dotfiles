snippet im "import xyz from 'xyz'"
import ${2} from '${1}';
endsnippet

snippet imas "import * as xyz from 'xyz'"
import * as ${2} from '${1}';
endsnippet

snippet imm "import { member } from 'xyz'"
import { ${2} } from '${1}';
endsnippet

snippet em "export * from 'xyz'"
export * from '${1}';
endsnippet

snippet ed "export default xyz"
export default ${1};
endsnippet


snippet func "function"
function ${1:function_name}(${2}) {
  ${0:${VISUAL}}
}
endsnippet

snippet afunc "async function"
async function ${1:function_name}(${2}) {
  ${0:${VISUAL}}
}
endsnippet


snippet if "if (condition) { ... }"
if (${1:true}) {
  ${0:${VISUAL}}
}
endsnippet

snippet ife "if (condition) { ... } else { ... }"
if (${1:true}) {
  ${0:${VISUAL}}
} else {
  ${2}
}
endsnippet

snippet sw "switch (condition) { ... }"
switch (${1:expression}) {
  case '${3:case}':
    ${4}
    break;
  ${0}
  default:
    ${2}
}
endsnippet

snippet try "try { ... } catch(e) { ... }"
try {
  ${0:${VISUAL}}
} catch (${1:e}) {
  ${2:/* handle error */}
}
endsnippet

snippet tryf "try { ... } catch(e) { ... } finally { ... }"
try {
  ${0:${VISUAL}}
} catch (${1:e}) {
  ${2:/* handle error */}
} finally {
  ${3:/* be executed regardless of the try / catch result*/}
}
endsnippet


snippet cl "console.log"
console.log(${1});
endsnippet

snippet ce "console.error"
console.error(${1});
endsnippet


snippet jsonp "JSON.parse(...)" i
JSON.parse(${0:jstr})
endsnippet

snippet jsons "JSON.stringify(...)" i
JSON.stringify(${0:object})
endsnippet


snippet cla "class xyz { ... }"
class ${1} {
  ${0:${VISUAL}}
}
endsnippet

snippet clax "class xyz extends abc { ... }"
class ${1} extends ${2} {
  ${0:${VISUAL}}
}
endsnippet

snippet clac "class xyz { constructor() { ... } }"
class ${1} {
  constructor(${2}) {
    ${0:${VISUAL}}
  }
}
endsnippet

snippet np "new Promose((resolve, reject) => { ... })" i
new Promise((resolve, reject) => {
  ${0:${VISUAL}}
});
endsnippet
